(define (make-point x y)
  (cons x y))
(define (x-point p)
  (car p))
(define (y-point p)
  (cdr p))

(define (make-segment start end)
  (cons start end))
(define (start-segment s)
  (car s))
(define (end-segment s)
  (cdr s))

(define (midpoint-segment s)
  (let ((a (start-segment s))
        (e (end-segment s)))
  (define (average m n)
    (/ (+ m n) 2))
  (make-point (average (x-point a) (x-point e))
              (average (y-point a) (y-point e)))))

(define (print-point p)
  (newline)
  (display "(")
  (display (x-point p))
  (display ",")
  (display (y-point p))
  (display ")"))

;test codes
(define a (make-point 1 2))
(define b (make-point 3 4))
(define s (make-segment a b))
(print-point a)
(print-point b)
(print-point (midpoint-segment s))
(newline)
